#include <algorithm>
#include <unordered_map> 
class Solution {
public:
    vector<int> findAnagrams(string s, string p) {
        unordered_map<char,int> s1;
        unordered_map<char,int> p1;
        for(int i = 0; p[i] != '\0'; i++)
        {
            s1[s[i] - 'a']++;
            p1[p[i]-'a']++;
        }
        vector<int> result;
        if(s1 == p1){
            result.push_back(0);
        }
        for(int i = p.length(); s[i] != '\0'; i++)
        {
            ++s1[ s[i]-'a' ];
            --s1[ s[i - p.length() ] - 'a'];
            unordered_map<char,int>:: iterator it = s1.begin();
            int fg = 0;
            while( it != s1.end() ){
                if( p1[it->first] != s1[it->first] ){
                    fg = 1;
                    break;
                }
                    it++;
            }
            if(fg == 0){
                result.push_back( i - p.length() + 1 );
            }
        }
        return result;
    }
};