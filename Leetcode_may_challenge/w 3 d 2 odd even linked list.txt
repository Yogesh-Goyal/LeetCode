/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head == NULL)
        {
            return NULL;
        }
        int i = 1;
        ListNode* temp = new ListNode(0);
        ListNode* tail = temp;
        ListNode* rear = head;
        ListNode* prev = head;
        while(rear != NULL)
        {
            if( i % 2 ==0){
                int x = rear->val;
                ListNode* t = new ListNode(x);
                tail->next = t;
                tail = tail->next;
                prev->next = rear->next;
                rear = prev->next;
               }
            else{
                prev = rear;
                rear = rear->next;
            }
            i++;
        }
        prev->next = temp->next;
        return head;
    }
};