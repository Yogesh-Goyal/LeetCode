class Solution {
public:
    int result;
    int cost;
    void findit(int n, vector<vector<pair<int,int>>>& flights, int src, int dst, int k){
        if(src == dst){
            if(cost < result)
                result = cost;
            return;
        }
        if(k <= 0)
            return;
        for( pair<int,int> &p : flights[src] ){
                cost += p.second;
                if(cost > result)
                    continue;
                findit(n,flights,p.first,dst,k-1);
                cost -= p.second;
            }
    }
    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int K) {
        vector<vector<pair<int,int>>> adj(n);
        for(vector<int>& f: flights)
            adj[f[0]].push_back({f[1],f[2]});
        result = INT_MAX;
        cost = 0;
        findit(n,adj,src,dst,K+1);
        if(result == INT_MAX)
            return -1;
        return result;
    }
};